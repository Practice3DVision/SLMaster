# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Windows

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    steps:
      - name: Install Visual Studio 2019
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install vcpkg
        run: |
            cd C:/
            git clone https://github.com/microsoft/vcpkg.git
            cd vcpkg
            .\bootstrap-vcpkg.bat
            .\vcpkg integrate install

      - name: Install PCL with vcpkg
        run: |
          cd C:/vcpkg
          .\vcpkg install pcl[qt] vtk --triplet x64-windows
              
      - name: Install OpenCV
        run: |
          cd C:/vcpkg
          .\vcpkg install opencv:x64-windows
          
      - uses: actions/checkout@v3
        with:
            submodules: true
  
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}